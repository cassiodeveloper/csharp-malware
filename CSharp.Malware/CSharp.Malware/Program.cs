using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Speech.Synthesis;
using System.Threading;
using System.Windows.Forms;

namespace CSharp.Malware
{
    public class Program
    {
        #region Constants

        private const string TASK_BAR = "Shell_TrayWnd";

        #endregion

        #region PInvoke

        [DllImport("user32.dll", SetLastError = true)]
        private static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

        [DllImport("user32.dll")]
        private static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

        #endregion

        #region Main

        /// <summary>
        /// This is the main method, where the program starts.
        /// </summary>
        /// <param name="args"></param>
        // To use Clipboard functions, uncomment the line below.
        //[STAThreadAttribute]
        public static void Main(string[] args)
        {
            //OpenInternetExplorer();
            //OpenNotePad();
            //SpeakToMe();
            //ShowOrNotTheTaskBar();
            //SetClipboard();

            FinishProgram();
        }

        #endregion

        #region Auxiliary Methods

        /// <summary>
        /// This method open the Internet Explorer and access the author site.
        /// </summary>
        private static void OpenInternetExplorer()
        {
            Process.Start("iexplore", "cassiobp.com.br");
        }

        /// <summary>
        /// This method open the Notepad.exe and write some text.
        /// </summary>
        private static void OpenNotePad()
        {
            Process.Start("Notepad");
            Thread.Sleep(1000);
            SendKeys.SendWait("Notepad OWNED!");
        }

        /// <summary>
        /// This method just "say" the string. Audio required!
        /// </summary>
        private static void SpeakToMe()
        {
            var audio = new SpeechSynthesizer();
            audio.Speak("Your sound has been hacked!");
        }

        /// <summary>
        /// This method shows or hide the Windows Task Bar
        /// </summary>
        private static void ShowOrNotTheTaskBar()
        {
            var taskBarWindow = FindWindow(TASK_BAR, "");
            ShowWindow(taskBarWindow, 1);
        }

        /// <summary>
        /// This method, place a constant string to the clipboard.
        /// </summary>
        private static void SetClipboard()
        {
            Clipboard.SetText("Clipboard OWNED!");
        }

        /// <summary>
        /// This method shows a finish message on the console.
        /// </summary>
        private static void FinishProgram()
        {
            Console.WriteLine("Program finished.");
            Console.ReadKey();
        }

        #endregion
    }
}